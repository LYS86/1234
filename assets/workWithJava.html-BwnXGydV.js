import{_ as e,r as p,o as c,c as o,d as a,b as n,a as t,e as i}from"./app-5KF5cNEL.js";const l={},u=a("h1",{id:"workwithjava",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#workwithjava"},[a("span",null,"WorkWithJava")])],-1),r={class:"hint-container tip"},d=a("p",{class:"hint-container-title"},"提示",-1),v=a("br",null,null,-1),k={href:"https://p-bakker.github.io/rhino/",target:"_blank",rel:"noopener noreferrer"},h=a("br",null,null,-1),j={href:"https://github.com/mozilla/rhino/issues/954#issuecomment-949763810",target:"_blank",rel:"noopener noreferrer"},m=i(`<h1 id="scripting-java-with-rhino" tabindex="-1"><a class="header-anchor" href="#scripting-java-with-rhino"><span>Scripting Java with Rhino</span></a></h1><p>Rhino是一个JavaScript引擎，它允许JavaScript代码与Java代码相互操作。以下是使用Rhino进行Java脚本编程的一些关键点。</p><h2 id="访问java包和类" tabindex="-1"><a class="header-anchor" href="#访问java包和类"><span>访问Java包和类</span></a></h2><p>在JavaScript中，脚本存在于任何包层级之外。Rhino定义了一个名为<code>Packages</code>的顶层变量，它包含了所有顶级Java包，例如<code>java</code>和<code>com</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> Packages<span class="token punctuation">.</span>java
<span class="token punctuation">[</span>JavaPackage java<span class="token punctuation">]</span>

js<span class="token operator">&gt;</span> java
<span class="token punctuation">[</span>JavaPackage java<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以使用<code>importPackage</code>函数来导入整个包中的所有类，类似于Java中的<code>import</code>声明。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> <span class="token function">importPackage</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>io<span class="token punctuation">)</span>
js<span class="token operator">&gt;</span> File
<span class="token punctuation">[</span>JavaClass java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="与java一起工作" tabindex="-1"><a class="header-anchor" href="#与java一起工作"><span>与Java一起工作</span></a></h2><p>创建Java对象的方式与Java中相同，使用<code>new</code>操作符。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
Thu Jan <span class="token number">24</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">18</span><span class="token operator">:</span><span class="token number">17</span> <span class="token constant">EST</span> <span class="token number">2002</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以调用对象的方法：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> f <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File</span><span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>txt
js<span class="token operator">&gt;</span> f<span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token boolean">true</span>
js<span class="token operator">&gt;</span> f<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
test<span class="token punctuation">.</span>txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>静态方法和字段可以直接从类对象本身访问。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token constant">PI</span>
<span class="token number">3.141592653589793</span>
js<span class="token operator">&gt;</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Math<span class="token punctuation">.</span><span class="token function">cos</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="调用重载方法" tabindex="-1"><a class="header-anchor" href="#调用重载方法"><span>调用重载方法</span></a></h2><p>Rhino在运行时执行重载解析，根据传递给方法的参数类型选择最合适的方法。</p><h2 id="实现java接口" tabindex="-1"><a class="header-anchor" href="#实现java接口"><span>实现Java接口</span></a></h2><p>Rhino允许使用JavaScript对象来实现Java接口。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token function-variable function">run</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\nrunning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
<span class="token punctuation">[</span>object Object<span class="token punctuation">]</span>

js<span class="token operator">&gt;</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Runnable</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>object JavaObject<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javaadapter构造函数" tabindex="-1"><a class="header-anchor" href="#javaadapter构造函数"><span>JavaAdapter构造函数</span></a></h2><p><code>JavaAdapter</code>构造函数允许实现一个接口或扩展一个类，并提供一个JavaScript对象来包含将被Java适配器调用的方法。</p><h2 id="javascript函数作为java接口" tabindex="-1"><a class="header-anchor" href="#javascript函数作为java接口"><span>JavaScript函数作为Java接口</span></a></h2><p>Rhino允许将JavaScript函数作为Java接口的实现。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> t <span class="token operator">=</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span><span class="token function">Thread</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;\\nrunning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Thread<span class="token punctuation">[</span>Thread<span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>main<span class="token punctuation">]</span>
js<span class="token operator">&gt;</span> t<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建java数组" tabindex="-1"><a class="header-anchor" href="#创建java数组"><span>创建Java数组</span></a></h2><p>Rhino没有为创建Java数组提供特殊语法，必须使用<code>java.lang.reflect.Array</code>类。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> a <span class="token operator">=</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>reflect<span class="token punctuation">.</span>Array<span class="token punctuation">.</span><span class="token function">newInstance</span><span class="token punctuation">(</span>java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>String<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">[</span>Ljava<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>String<span class="token punctuation">;</span>@7ffe01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java字符串和javascript字符串" tabindex="-1"><a class="header-anchor" href="#java字符串和javascript字符串"><span>Java字符串和JavaScript字符串</span></a></h2><p>Java字符串和JavaScript字符串不是相同的。Java字符串是<code>java.lang.String</code>类型的实例，而JavaScript字符串具有<code>String.prototype</code>定义的方法。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>js<span class="token operator">&gt;</span> javaString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>String</span><span class="token punctuation">(</span><span class="token string">&quot;Java&quot;</span><span class="token punctuation">)</span>
Java
js<span class="token operator">&gt;</span> jsString <span class="token operator">=</span> <span class="token string">&quot;JavaScript&quot;</span>
JavaScript
js<span class="token operator">&gt;</span> javaString<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">4</span>
js<span class="token operator">&gt;</span> jsString<span class="token punctuation">.</span>length
<span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="javaimporter构造函数" tabindex="-1"><a class="header-anchor" href="#javaimporter构造函数"><span>JavaImporter构造函数</span></a></h2><p><code>JavaImporter</code>是一个全局构造函数，它允许在脚本Java时省略显式的包名。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> SwingGui <span class="token operator">=</span> <span class="token function">JavaImporter</span><span class="token punctuation">(</span>Packages<span class="token punctuation">.</span>javax<span class="token punctuation">.</span>swing<span class="token punctuation">,</span> <span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">with</span> <span class="token punctuation">(</span>SwingGui<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> mybutton <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JButton</span><span class="token punctuation">(</span>test<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> mypoint <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> myframe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JFrame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="java异常" tabindex="-1"><a class="header-anchor" href="#java异常"><span>Java异常</span></a></h2><p>Java方法抛出的异常可以被JavaScript代码捕获。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>
    java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;NonExistingClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>javaException <span class="token keyword">instanceof</span> <span class="token class-name">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>ClassNotFoundException</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;Class not found&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="限制" tabindex="-1"><a class="header-anchor" href="#限制"><span>限制</span></a></h2><h3 id="liveconnect" tabindex="-1"><a class="header-anchor" href="#liveconnect"><span>LiveConnect</span></a></h3><p>如果Java对象的字段名与方法名冲突，该字段的值将被延迟检索，并且可能会被后续赋值影响。</p><h3 id="jsobject" tabindex="-1"><a class="header-anchor" href="#jsobject"><span>JSObject</span></a></h3><p>Rhino不支持<code>netscape.javascript.JSObject</code>类。</p>`,41);function b(g,J){const s=p("ExternalLinkIcon");return c(),o("div",null,[u,a("div",r,[d,a("p",null,[n("本内容由Ai整理，内容可能存在错误，请注意核查"),v,n(" 原文地址："),a("a",k,[n("Rhino 文档"),t(s)]),n(",一个由 Rhino 维护者使用 GitHub Pages 部署的 Rhino 文档网站"),h,a("a",j,[n("官方 issues 关于原 Rhino 文档地址 404 的讨论"),t(s)])])]),m])}const w=e(l,[["render",b],["__file","workWithJava.html.vue"]]),x=JSON.parse('{"path":"/workWithJava.html","title":"WorkWithJava","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"访问Java包和类","slug":"访问java包和类","link":"#访问java包和类","children":[]},{"level":2,"title":"与Java一起工作","slug":"与java一起工作","link":"#与java一起工作","children":[]},{"level":2,"title":"调用重载方法","slug":"调用重载方法","link":"#调用重载方法","children":[]},{"level":2,"title":"实现Java接口","slug":"实现java接口","link":"#实现java接口","children":[]},{"level":2,"title":"JavaAdapter构造函数","slug":"javaadapter构造函数","link":"#javaadapter构造函数","children":[]},{"level":2,"title":"JavaScript函数作为Java接口","slug":"javascript函数作为java接口","link":"#javascript函数作为java接口","children":[]},{"level":2,"title":"创建Java数组","slug":"创建java数组","link":"#创建java数组","children":[]},{"level":2,"title":"Java字符串和JavaScript字符串","slug":"java字符串和javascript字符串","link":"#java字符串和javascript字符串","children":[]},{"level":2,"title":"JavaImporter构造函数","slug":"javaimporter构造函数","link":"#javaimporter构造函数","children":[]},{"level":2,"title":"Java异常","slug":"java异常","link":"#java异常","children":[]},{"level":2,"title":"限制","slug":"限制","link":"#限制","children":[{"level":3,"title":"LiveConnect","slug":"liveconnect","link":"#liveconnect","children":[]},{"level":3,"title":"JSObject","slug":"jsobject","link":"#jsobject","children":[]}]}],"git":{"updatedTime":1716250983000,"contributors":[{"name":"Lin","email":"yditmxpev@mozmail.com","commits":2}]},"filePathRelative":"workWithJava.md"}');export{w as comp,x as data};
