import{_ as a,r as i,o,c as d,a as e,d as n,b as t,e as r}from"./app-CJv-W2Gj.js";const c={},p=e("h1",{id:"关于本文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#关于本文档"},[e("span",null,"关于本文档")])],-1),u=e("p",null,"文档中使用一些标签来标记状态：",-1),m=e("h2",{id:"开发环境搭建",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#开发环境搭建"},[e("span",null,"开发环境搭建")])],-1),h={class:"hint-container important"},v=e("p",{class:"hint-container-title"},"插件信息",-1),b={href:"https://marketplace.visualstudio.com/items?itemName=aaroncheng.auto-js-vsce-fixed",target:"_blank",rel:"noopener noreferrer"},_=e("br",null,null,-1),g=e("br",null,null,-1),x=e("br",null,null,-1),k=e("br",null,null,-1),f=e("br",null,null,-1),j=e("br",null,null,-1),C=e("br",null,null,-1),y=e("br",null,null,-1),S=e("br",null,null,-1),V={href:"https://github.com/kkevsekk1/webpack-autojs/archive/refs/heads/master.zip",target:"_blank",rel:"noopener noreferrer"},w=r(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-g</span> webpack webpack-cli <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npmmirror.com
<span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npmmirror.com 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>- webpack-autojs
    -common             &lt;-- 公共文件
    -types              &lt;-- 代码提示
    -work               &lt;-- 项目文件
    -scriptConfig.js    &lt;-- 配置文件
    -header.txt         &lt;-- 头部文件
    -package.json       &lt;-- 配置文件
    -dist               &lt;-- 编译输出
   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们在 work 目录中新建项目进行开发，编译配置在 scriptConfig.js 中，按照注释修改。<br> header.txt 文件内容会原封不动的添加到编译后的js代码头部，可以用来添加注释。<br> package.json 文件规定 npm run start 和 npm run build 的命令，无需修改。</p><h2 id="代码开发" tabindex="-1"><a class="header-anchor" href="#代码开发"><span>代码开发</span></a></h2><ol><li><p><strong>开启服务</strong>：</p><ul><li>在 VSCode 的命令面板中（可以通过按 <code>Ctrl+Shift+P</code> 快捷键打开），输入 <code>开启服务</code>或<code>开启服务并监听adb设备</code> 并选择它。</li></ul></li><li><p><strong>连接手机</strong>：</p><ul><li>确保您的 Android 设备已经开启 USB 调试模式，手机和电脑处于同一 Wi-Fi 网络下。</li><li>在 Auto.js 侧边栏中启用连接电脑，然后输入 VSCode 显示的 IP 地址进行连接。</li><li>如果使用 USB 连接，确保手机开启了 USB 调试，并使用数据线连接电脑。VSCode 插件将自动识别连接的设备。</li></ul></li></ol><p>3: <strong>运行命令</strong></p><p>在 VSCode 的终端中，导航到您的项目目录，然后运行以下命令来启动开发服务器：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> run start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p><strong>自动运行</strong>：</p><ul><li>如果 <code>scriptConfig.js</code> 中的 <code>watch</code> 配置设置为 <code>&#39;rerun&#39;</code>，每当您保存文件时，VSCode 将自动在连接的 Android 设备上运行最新的脚本。</li></ul></li><li><p><strong>自动部署</strong>：</p><ul><li>如果 <code>scriptConfig.js</code> 中的 <code>watch</code> 配置设置为 <code>&#39;deploy&#39;</code>，每当您保存文件时，VSCode 将自动将重新编译的项目保存到手机中。</li></ul></li></ul>`,9);function B(N,A){const l=i("Badge"),s=i("ExternalLinkIcon");return o(),d("div",null,[p,u,e("ul",null,[e("li",null,[n(l,{type:"tip",text:"稳定",vertical:"middle"}),t(" 一般不会被更改，并且会保证后向兼容性")]),e("li",null,[n(l,{type:"warning",text:"实验",vertical:"middle"}),t(" 可能会更改或移除。应该谨慎使用这些函数或模块，或者仅用作临时或试验用途。")]),e("li",null,[n(l,{type:"danger",text:"弃用",vertical:"middle"}),t(" 被移除或更改。应该移除对这些函数的使用，以免后续出现意料之外的问题。")]),e("li",null,[n(l,{type:"tip",text:"v4.1.0+",vertical:"middle"}),t(" 版本号，代表该函数在某个版本加入")]),e("li",null,[n(l,{type:"tip",text:"Android 7+",vertical:"middle"}),t(" 安卓版本，低于此版本无效果")]),e("li",null,[n(l,{type:"tip",text:"Root",vertical:"middle"}),t(" 基于 Root 运行")]),e("li",null,[n(l,{type:"tip",text:"Accessibility",vertical:"middle"}),t(" 基于 无障碍 运行")]),e("li",null,[n(l,{type:"tip",text:"global",vertical:"middle"}),t(" 此函数可全局使用")])]),m,e("div",h,[v,e("p",null,[t("名称: "),e("a",b,[t("Auto.js-Autox.js-VSCodeExt"),n(s)]),_,t(" ID: aaroncheng.auto-js-vsce-fixed"),g,t(" 说明: 用于在pc上vscode中开发autoxjs的自动化脚本的插件。结合webpack自动编译，js自动运行到手机"),x,t(" 版本: 1.110.0"),k,t(" 发布者: aaron cheng")])]),e("p",null,[t("1.确保您的计算机上安装了 Visual Studio Code，Git ，Node.js。"),f,t(" 2.打开 Visual Studio Code。"),j,t(" 3.点击左侧的扩展图标或按 Ctrl+Shift+X 打开扩展市场。"),C,t(' 4.在搜索框中输入 "aaroncheng.auto-js-vsce-fixed"。'),y,t(" 5.找到插件并进行安装。"),S,t(" 6.下载"),e("a",V,[t("webpack-autojs"),n(s)]),t("项目，使用vscode打开项目，在终端中输入以下命令：")]),w])}const I=a(c,[["render",B],["__file","documentation.html.vue"]]),z=JSON.parse('{"path":"/documentation.html","title":"关于本文档","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"开发环境搭建","slug":"开发环境搭建","link":"#开发环境搭建","children":[]},{"level":2,"title":"代码开发","slug":"代码开发","link":"#代码开发","children":[]}],"git":{"updatedTime":1713305640000,"contributors":[{"name":"Lin","email":"yditmxpev@mozmail.com","commits":2}]},"filePathRelative":"documentation.md"}');export{I as comp,z as data};
