import{_ as o,r as c,o as r,c as t,d,b as l,a as e,e as m}from"./app-DB8vNATu.js";const u={},p=e("h1",{id:"paddle",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#paddle"},[e("span",null,"paddle")])],-1),n=m('<h2 id="paddle-ocr-image-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-useslim"><span>paddle.ocr(image,useSlim)</span></a></h2><p>使用指定的 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocr-image-cputhreadnum-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-cputhreadnum-useslim"><span>paddle.ocr(image,[cpuThreadNum,useSlim])</span></a></h2><p>使用指定的 CPU 核心数和 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。默认值:系统的 CPU 核心数</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型,默认</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocr-image-cputhreadnum-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-cputhreadnum-mymodelpath"><span>paddle.ocr(image,cpuThreadNum,myModelPath)</span></a></h2><p>使用指定的 CPU 核心数和自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocr-image-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocr-image-mymodelpath"><span>paddle.ocr(image,myModelPath)</span></a></h2><p>使用自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {Array} 识别结果数组,值为 <a href="#ocrresult">OcrResult</a></li></ul><h2 id="paddle-ocrtext-image-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-useslim"><span>paddle.ocrText(image,useSlim)</span></a></h2><p>使用指定的 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h2 id="paddle-ocrtext-image-cputhreadnum-useslim" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-cputhreadnum-useslim"><span>paddle.ocrText(image,[cpuThreadNum,useSlim])</span></a></h2><p>使用指定的 CPU 核心数和 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。默认值:系统的 CPU 核心数</li><li><code>useSlim</code> {Boolean} 加载的模型,可选值: <ul><li><code>true</code> ocr_v2_for_cpu(slim) :快速模型,默认</li><li><code>false</code> ocr_v2_for_cpu : 精准模型</li></ul></li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h2 id="paddle-ocrtext-image-cputhreadnum-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-cputhreadnum-mymodelpath"><span>paddle.ocrText(image,cpuThreadNum,myModelPath)</span></a></h2><p>使用指定的 CPU 核心数和自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>cpuThreadNum</code> {Number} 用于执行 OCR 的 CPU 核心数。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h2 id="paddle-ocrtext-image-mymodelpath" tabindex="-1"><a class="header-anchor" href="#paddle-ocrtext-image-mymodelpath"><span>paddle.ocrText(image,myModelPath)</span></a></h2><p>使用自定义 OCR 模型来执行 OCR。</p><ul><li><code>image</code> {Image} 要执行 OCR 的图像。</li><li><code>myModelPath</code> {String} 自定义 OCR 模型的绝对路径。</li><li><code>return</code> {String} 识别到的文本字符串。</li></ul><h3 id="ocrresult" tabindex="-1"><a class="header-anchor" href="#ocrresult"><span>OcrResult</span></a></h3><p><code>OcrResult</code> 是一个表示 OCR 结果的类。它包含以下字段：</p>',26),s=e("li",null,[e("code",null,"confidence"),l(" {Number} 识别的置信度。")],-1),h=e("li",null,[e("code",null,"preprocessTime"),l(" {Number} 预处理时间。")],-1),g=e("li",null,[e("code",null,"inferenceTime"),l(" {Number} 推理时间。")],-1),_=e("li",null,[e("code",null,"text"),l(" {String} 识别出的文本。")],-1),C=e("code",null,"bounds",-1),x={href:"https://developer.android.google.cn/reference/kotlin/android/graphics/Rect?hl=en",target:"_blank",rel:"noopener noreferrer"};function R(O,f){const a=c("Badge"),i=c("ExternalLinkIcon");return r(),t("div",null,[p,d(a,{type:"tip",text:"5.6.1",vertical:"middle"}),l(),d(a,{type:"warning",text:"实验",vertical:"middle"}),n,e("ul",null,[s,h,g,_,e("li",null,[C,l(" {"),e("a",x,[l("Rect"),d(i)]),l("} 文本在图像中的位置")])])])}const v=o(u,[["render",R],["__file","paddle.html.vue"]]),N=JSON.parse('{"path":"/paddle.html","title":"paddle","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"paddle.ocr(image,useSlim)","slug":"paddle-ocr-image-useslim","link":"#paddle-ocr-image-useslim","children":[]},{"level":2,"title":"paddle.ocr(image,[cpuThreadNum,useSlim])","slug":"paddle-ocr-image-cputhreadnum-useslim","link":"#paddle-ocr-image-cputhreadnum-useslim","children":[]},{"level":2,"title":"paddle.ocr(image,cpuThreadNum,myModelPath)","slug":"paddle-ocr-image-cputhreadnum-mymodelpath","link":"#paddle-ocr-image-cputhreadnum-mymodelpath","children":[]},{"level":2,"title":"paddle.ocr(image,myModelPath)","slug":"paddle-ocr-image-mymodelpath","link":"#paddle-ocr-image-mymodelpath","children":[]},{"level":2,"title":"paddle.ocrText(image,useSlim)","slug":"paddle-ocrtext-image-useslim","link":"#paddle-ocrtext-image-useslim","children":[]},{"level":2,"title":"paddle.ocrText(image,[cpuThreadNum,useSlim])","slug":"paddle-ocrtext-image-cputhreadnum-useslim","link":"#paddle-ocrtext-image-cputhreadnum-useslim","children":[]},{"level":2,"title":"paddle.ocrText(image,cpuThreadNum,myModelPath)","slug":"paddle-ocrtext-image-cputhreadnum-mymodelpath","link":"#paddle-ocrtext-image-cputhreadnum-mymodelpath","children":[]},{"level":2,"title":"paddle.ocrText(image,myModelPath)","slug":"paddle-ocrtext-image-mymodelpath","link":"#paddle-ocrtext-image-mymodelpath","children":[{"level":3,"title":"OcrResult","slug":"ocrresult","link":"#ocrresult","children":[]}]}],"git":{"updatedTime":1713029763000,"contributors":[{"name":"Lin","email":"yditmxpev@mozmail.com","commits":1}]},"filePathRelative":"paddle.md"}');export{v as comp,N as data};
