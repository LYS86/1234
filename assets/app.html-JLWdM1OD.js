import{_ as i,r as o,o as l,c,d as e,a,b as n,e as p}from"./app-BpvbY-DG.js";const r={},d=a("h1",{id:"应用交互-app",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#应用交互-app"},[a("span",null,"应用交互-app")])],-1),u=p('<div class="hint-container note"><p class="hint-container-title">app</p><p>该模块允许你与其他应用程序进行交互。你可以启动其他应用程序，发送 Intent 意图，打开文件，发送电子邮件等。</p></div><h2 id="app-versioncode" tabindex="-1"><a class="header-anchor" href="#app-versioncode"><span>app.versionCode</span></a></h2><ul><li><code>return</code> {number}</li></ul><p>当前软件版本号，整数值。例如 160, 256 等。<br> 如果在 Autox.js 中运行则为 Autox.js 的版本号；在打包的软件中则为打包软件的版本号。</p><h2 id="app-versionname" tabindex="-1"><a class="header-anchor" href="#app-versionname"><span>app.versionName</span></a></h2><ul><li><code>return</code> {string}</li></ul><p>当前软件的版本名称，例如&quot;3.0.0 Beta&quot;。<br> 如果在 Autox.js 中运行则为 Autox.js 的版本名称；在打包的软件中则为打包软件的版本名称。</p><h2 id="app-autojs-versioncode" tabindex="-1"><a class="header-anchor" href="#app-autojs-versioncode"><span>app.autojs.versionCode</span></a></h2><ul><li><code>return</code> {number}</li></ul><p>Autox.js 版本号，整数值。例如 160, 256 等。</p><h2 id="app-autojs-versionname" tabindex="-1"><a class="header-anchor" href="#app-autojs-versionname"><span>app.autojs.versionName</span></a></h2><ul><li><code>return</code> {string}</li></ul><p>Autox.js 版本名称，例如&quot;3.0.0 Beta&quot;。</p><h2 id="app-launchapp-appname" tabindex="-1"><a class="header-anchor" href="#app-launchapp-appname"><span>app.launchApp(appName)</span></a></h2>',14),h=a("ul",null,[a("li",null,[a("code",null,"appName"),n(" {string} 应用名称")]),a("li",null,[a("code",null,"return"),n(" {boolean}")])],-1),v=a("p",null,"通过应用名称启动应用。如果该名称对应的应用不存在，则返回 false; 否则返回 true。如果该名称对应多个应用，则只启动其中某一个。",-1),k=a("h2",{id:"app-launch-packagename",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-launch-packagename"},[a("span",null,"app.launch(packageName)")])],-1),m=a("ul",null,[a("li",null,[a("code",null,"packageName"),n(" {string} 应用包名")]),a("li",null,[a("code",null,"return"),n(" {boolean}")])],-1),g=a("p",null,"通过应用包名启动应用。如果该包名对应的应用不存在，则返回 false；否则返回 true。",-1),_=a("h2",{id:"app-launchpackage-packagename",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-launchpackage-packagename"},[a("span",null,"app.launchPackage(packageName)")])],-1),b=a("ul",null,[a("li",null,[a("code",null,"packageName"),n(" {string} 应用包名")]),a("li",null,[a("code",null,"return"),n(" {boolean}")])],-1),y=a("p",null,[n("相当于"),a("code",null,"app.launch(packageName)"),n("。")],-1),f=a("h2",{id:"app-getpackagename-appname",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-getpackagename-appname"},[a("span",null,"app.getPackageName(appName)")])],-1),x=a("ul",null,[a("li",null,[a("code",null,"appName"),n(" {string} 应用名称")]),a("li",null,[a("code",null,"return"),n(" {string}")])],-1),q=a("p",null,[n("获取应用名称对应的已安装的应用的包名，如果该找不到该应用，返回 "),a("code",null,"null"),n(" 。如果该名称对应多个应用，则只返回其中某一个的包名。")],-1),j=a("h2",{id:"app-getappname-packagename",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-getappname-packagename"},[a("span",null,"app.getAppName(packageName)")])],-1),A=a("ul",null,[a("li",null,[a("code",null,"packageName"),n(" {string} 应用包名")]),a("li",null,[a("code",null,"return"),n(" {string}")])],-1),N=a("p",null,[n("获取应用包名对应的已安装的应用的名称。如果该找不到该应用，返回 "),a("code",null,"null"),n("。")],-1),I=a("h2",{id:"app-openappsetting-packagename",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-openappsetting-packagename"},[a("span",null,"app.openAppSetting(packageName)")])],-1),U=p(`<ul><li><code>packageName</code> {string} 应用包名</li><li><code>return</code> {boolean}</li></ul><p>打开应用的详情页(设置页)。如果找不到该应用，返回 false; 否则返回 true。</p><h2 id="app-viewfile-path" tabindex="-1"><a class="header-anchor" href="#app-viewfile-path"><span>app.viewFile(path)</span></a></h2><ul><li><code>path</code> {string} 文件路径</li></ul><p>用其他应用查看文件。文件不存在的情况由查看文件的应用处理。</p><p>如果找不出可以查看该文件的应用，则抛出<code>ActivityNotException</code>。</p><h2 id="app-editfile-path" tabindex="-1"><a class="header-anchor" href="#app-editfile-path"><span>app.editFile(path)</span></a></h2><ul><li><code>path</code> {string} 文件路径</li></ul><p>用其他应用编辑文件。文件不存在的情况由编辑文件的应用处理。</p><p>如果找不出可以编辑该文件的应用，则抛出<code>ActivityNotException</code>。</p><h2 id="app-uninstall-packagename" tabindex="-1"><a class="header-anchor" href="#app-uninstall-packagename"><span>app.uninstall(packageName)</span></a></h2><ul><li><code>packageName</code> {string} 应用包名</li></ul><p>卸载应用。执行后会会弹出卸载应用的提示框。如果该包名的应用未安装，由应用卸载程序处理，可能弹出&quot;未找到应用&quot;的提示。</p><h2 id="app-openurl-url" tabindex="-1"><a class="header-anchor" href="#app-openurl-url"><span>app.openUrl(url)</span></a></h2><ul><li><code>url</code> {string} 网站的 URL，如果不以 &quot;http://&quot; 或 &quot;https://&quot; 开头则默认是 &quot;http://&quot;。</li></ul><p>用浏览器打开网站 url。</p><p>如果没有安装浏览器应用，则抛出<code>ActivityNotException</code>。</p><h2 id="app-sendemail-options" tabindex="-1"><a class="header-anchor" href="#app-sendemail-options"><span>app.sendEmail(options)</span></a></h2><ul><li><code>options</code> {object} 发送邮件的参数。包括: <ul><li><code>email</code> {string} | {array} 收件人的邮件地址。如果有多个收件人，则用字符串数组表示</li><li><code>cc</code> {string} | {array} 抄送收件人的邮件地址。如果有多个抄送收件人，则用字符串数组表示</li><li><code>bcc</code> {string} | {array} 密送收件人的邮件地址。如果有多个密送收件人，则用字符串数组表示</li><li><code>subject</code> {string} 邮件主题(标题)</li><li><code>text</code> {string} 邮件正文</li><li><code>attachment</code> {string} 附件的路径。</li></ul></li></ul><p>根据选项<code>options</code>调用邮箱应用发送邮件。这些选项均是可选的。</p><p>如果没有安装邮箱应用，则抛出<code>ActivityNotException</code>。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//发送邮件给10086@qq.com和10001@qq.com。</span>
app<span class="token punctuation">.</span><span class="token function">sendEmail</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">email</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;10086@qq.com&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;10001@qq.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">subject</span><span class="token operator">:</span> <span class="token string">&quot;这是一个邮件标题&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;这是邮件正文&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="app-startactivity-name" tabindex="-1"><a class="header-anchor" href="#app-startactivity-name"><span>app.startActivity(name)</span></a></h2><ul><li><code>name</code> {string} 活动名称，可选的值为: <ul><li><code>console</code> 日志界面</li><li><code>settings</code> 设置界面</li></ul></li></ul><p>启动 Autox.js 的特定界面。该函数在 Autox.js 内运行则会打开 Autox.js 内的界面，在打包应用中运行则会打开打包应用的相应界面。</p><h2 id="进阶-意图-intent" tabindex="-1"><a class="header-anchor" href="#进阶-意图-intent"><span>进阶: 意图 Intent</span></a></h2><p>Intent(意图) 是一个消息传递对象，您可以使用它从其他应用组件请求操作。尽管 Intent 可以通过多种方式促进组件之间的通信，但其基本用例主要包括以下三个：</p><ul><li><p>启动活动(Activity)：<br> Activity 表示应用中的一个&quot;屏幕&quot;。例如应用主入口都是一个 Activity，应用的功能通常也以 Activity 的形式独立，例如微信的主界面、朋友圈、聊天窗口都是不同的 Activity。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。</p></li><li><p>启动服务(Service)：<br> Service 是一个不使用用户界面而在后台执行操作的组件。通过将 Intent 传递给 startService()，您可以启动服务执行一次性操作（例如，下载文件）。Intent 描述了要启动的服务，并携带了任何必要的数据。</p></li><li><p>传递广播：<br> 广播是任何应用均可接收的消息。系统将针对系统事件（例如：系统启动或设备开始充电时）传递各种广播。通过将 Intent 传递给 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast()，您可以将广播传递给其他应用。</p></li></ul><p>本模块提供了构建 Intent 的函数<code>app.intent()</code>, 启动 Activity 的函数<code>app.startActivity()</code>, 发送广播的函数<code>app.sendBroadcast()</code>。</p><p>使用这些方法可以用来方便的调用其他应用。例如直接打开某个 QQ 号的个人卡片页，打开某个 QQ 号的聊天窗口等。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> qq <span class="token operator">=</span> <span class="token string">&quot;2732014414&quot;</span><span class="token punctuation">;</span>
app<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;android.intent.action.VIEW&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;mqq://im/chat?chat_type=wpa&amp;version=1&amp;src_type=web&amp;uin=&quot;</span> <span class="token operator">+</span> qq<span class="token punctuation">,</span>
  <span class="token literal-property property">packageName</span><span class="token operator">:</span> <span class="token string">&quot;com.tencent.mobileqq&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app-intent-options" tabindex="-1"><a class="header-anchor" href="#app-intent-options"><span>app.intent(options)</span></a></h3>`,32),S=a("code",null,"options",-1),E=a("code",null,"action",-1),Q={href:"https://developer.android.com/reference/android/content/Intent.html#standard-activity-actions",target:"_blank",rel:"noopener noreferrer"},B=a("li",null,[a("code",null,"type"),n(' {string} 意图的 MimeType，表示和该意图直接相关的数据的类型，表示比如"text/plain"为纯文本类型。')],-1),w=a("li",null,[a("code",null,"data"),n(' {string} 意图的 Data，表示和该意图直接相关的数据，是一个 Uri, 可以是文件路径或者 Url 等。例如要打开一个文件, action 为"android.intent.action.VIEW", data 为"file:///sdcard/1.txt"。')],-1),F=a("code",null,"category",-1),C={href:"https://developer.android.com/reference/android/content/Intent.html#standard-categories",target:"_blank",rel:"noopener noreferrer"},T=a("li",null,[a("code",null,"packageName"),n(" {string} 目标包名")],-1),V=a("li",null,[a("code",null,"className"),n(" {string} 目标 Activity 或 Service 等组件的名称")],-1),L=a("code",null,"extras",-1),P={href:"https://developer.android.com/reference/android/content/Intent.html#standard-extra-data",target:"_blank",rel:"noopener noreferrer"},D=a("code",null,"flags",-1),W=a("code",null,'["activity_new_task", "grant_read_uri_permission"]',-1),z={href:"https://developer.android.com/reference/android/content/Intent.html#setFlags%28int%29",target:"_blank",rel:"noopener noreferrer"},O=a("li",null,[a("code",null,"root"),n(" {boolean} 是否以 root 权限启动、发送该 intent。使用该参数后，不能使用`context.")],-1),R=p(`<p>根据选项，构造一个意图 Intent 对象。</p><p>例如：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//打开应用来查看图片文件</span>
<span class="token keyword">var</span> i <span class="token operator">=</span> app<span class="token punctuation">.</span><span class="token function">intent</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;VIEW&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;image/png&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;file:///sdcard/1.png&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
context<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意的是，除非应用专门暴露 Activity 出来，否则在没有 root 权限的情况下使用 intent 是无法跳转到特定 Activity、应用的特定界面的。例如我们能通过 Intent 跳转到 QQ 的分享界面，是因为 QQ 对外暴露了分享的 Activity；而在没有 root 权限的情况下，我们无法通过 intent 跳转到 QQ 的设置界面，因为 QQ 并没有暴露这个 Activity。</p><p>但如果有 root 权限，则在 intent 的参数加上<code>&quot;root&quot;: true</code>即可。例如使用 root 权限跳转到 Autox.js 的设置界面为：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">packageName</span><span class="token operator">:</span> <span class="token string">&quot;org.autojs.autoxjs.v6&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&quot;org.autojs.autojs.ui.settings.SettingsActivity_&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">root</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，关于 intent 的参数如何获取的问题，一些 intent 是意外发现并且在网络中传播的（例如跳转 QQ 聊天窗口是因为 QQ 给网页提供了跳转到客服 QQ 的方法），如果要自己获取活动的 intent 的参数，可以通过例如&quot;intent 记录&quot;，&quot;隐式启动&quot;等应用拦截内部 intent 或者查询暴露的 intent。其中拦截内部 intent 需要 XPosed 框架，或者可以通过反编译等手段获取参数。总之，没有简单直接的方法。</p>`,7),J={href:"https://developer.android.com/guide/components/intents-filters.html#Types",target:"_blank",rel:"noopener noreferrer"},M=p(`<h3 id="app-startactivity-options" tabindex="-1"><a class="header-anchor" href="#app-startactivity-options"><span>app.startActivity(options)</span></a></h3><ul><li><code>options</code> {object} 选项</li></ul><p>根据选项构造一个 Intent，并启动该 Activity。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&quot;SEND&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&quot;file:///sdcard/1.txt&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="app-sendbroadcast-options" tabindex="-1"><a class="header-anchor" href="#app-sendbroadcast-options"><span>app.sendBroadcast(options)</span></a></h3><ul><li><code>options</code> {object} 选项</li></ul><p>根据选项构造一个 Intent，并发送该广播。</p><h3 id="app-startservice-options" tabindex="-1"><a class="header-anchor" href="#app-startservice-options"><span>app.startService(options)</span></a></h3><ul><li><code>options</code> {object} 选项</li></ul><p>根据选项构造一个 Intent，并启动该服务。</p><h3 id="app-sendbroadcast-name" tabindex="-1"><a class="header-anchor" href="#app-sendbroadcast-name"><span>app.sendBroadcast(name)</span></a></h3><ul><li><code>name</code> {string} 特定的广播名称，包括： <ul><li><code>inspect_layout_hierarchy</code> 布局层次分析</li><li><code>inspect_layout_bounds</code> 布局范围</li></ul></li></ul><p>发送以上特定名称的广播可以触发 Autox.js 的布局分析，方便脚本调试。这些广播在 Autox.js 发送才有效，在打包的脚本上运行将没有任何效果。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>app<span class="token punctuation">.</span><span class="token function">sendBroadcast</span><span class="token punctuation">(</span><span class="token string">&quot;inspect_layout_bounds&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="app-intenttoshell-options" tabindex="-1"><a class="header-anchor" href="#app-intenttoshell-options"><span>app.intentToShell(options)</span></a></h3><ul><li><code>options</code> {object} 选项</li></ul><p>根据选项构造一个 Intent，转换为对应的 shell 的 intent 命令的参数。</p><p>例如:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">shell</span><span class="token punctuation">(</span>
  <span class="token string">&quot;am start &quot;</span> <span class="token operator">+</span>
    app<span class="token punctuation">.</span><span class="token function">intentToShell</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">packageName</span><span class="token operator">:</span> <span class="token string">&quot;org.autojs.autoxjs.v6&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">className</span><span class="token operator">:</span> <span class="token string">&quot;org.autojs.autojs.ui.settings.SettingsActivity_&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token boolean">true</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),X={href:"https://developer.android.com/studio/command-line/adb#IntentSpec",target:"_blank",rel:"noopener noreferrer"},Y=a("h3",{id:"app-parseuri-uri",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-parseuri-uri"},[a("span",null,"app.parseUri(uri)")])],-1),G=a("li",null,[a("code",null,"uri"),n(' {string} 一个代表 Uri 的字符串，例如"file:///sdcard/1.txt", "https://www.autojs.org"')],-1),H=a("code",null,"return",-1),K={href:"https://developer.android.com/reference/android/net/Uri",target:"_blank",rel:"noopener noreferrer"},Z=a("p",null,[n("解析 uri 字符串并返回相应的 Uri 对象。即使 Uri 格式错误，该函数也会返回一个 Uri 对象，但之后如果访问该对象的 scheme, path 等值可能因解析失败而返回"),a("code",null,"null"),n("。")],-1),$=a("p",null,[n("需要注意的是，在高版本 Android 上，由于系统限制直接在 Uri 暴露文件的绝对路径，因此如果 uri 字符串是文件"),a("code",null,"file://..."),n("，返回的 Uri 会是诸如"),a("code",null,"content://..."),n("的形式。")],-1),aa=a("h3",{id:"app-geturiforfile-path",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#app-geturiforfile-path"},[a("span",null,"app.getUriForFile(path)")])],-1),na=a("li",null,[a("code",null,"path"),n(' {string} 文件路径，例如"/sdcard/1.txt"')],-1),ea=a("code",null,"return",-1),ta={href:"https://developer.android.com/reference/android/net/Uri",target:"_blank",rel:"noopener noreferrer"},sa=a("p",null,[n("从一个文件路径创建一个 uri 对象。需要注意的是，在高版本 Android 上，由于系统限制直接在 Uri 暴露文件的绝对路径，因此返回的 Uri 会是诸如"),a("code",null,"content://..."),n("的形式。")],-1);function pa(oa,ia){const s=o("Badge"),t=o("ExternalLinkIcon");return l(),c("div",null,[d,e(s,{type:"tip",text:"稳定",vertical:"middle"}),u,e(s,{text:"global",type:"tip"}),h,v,k,e(s,{text:"global",type:"tip"}),m,g,_,e(s,{text:"global",type:"tip"}),b,y,f,e(s,{text:"global",type:"tip"}),x,q,j,e(s,{text:"global",type:"tip"}),A,N,I,e(s,{text:"global",type:"tip"}),U,a("ul",null,[a("li",null,[S,n(" {object} 选项，包括： "),a("ul",null,[a("li",null,[E,n(' {string} 意图的 Action，指意图要完成的动作，是一个字符串常量，比如"android.intent.action.SEND"。当 action 以"android.intent.action"开头时，可以省略前缀，直接用"SEND"代替。参见'),a("a",Q,[n("Actions"),e(t)]),n("。")]),B,w,a("li",null,[F,n(" {array} 意图的类别。比较少用。参见"),a("a",C,[n("Categories"),e(t)]),n("。")]),T,V,a("li",null,[L,n(" {object} 以键值对构成的这个 Intent 的 Extras(额外信息)。提供该意图的其他信息，例如发送邮件时的邮件标题、邮件正文。参见"),a("a",P,[n("Extras"),e(t)]),n("。")]),a("li",null,[D,n(" {array} intent 的标识，字符串数组，例如"),W,n("。参见"),a("a",z,[n("Flags"),e(t)]),n("。")]),O])])]),R,a("p",null,[n("更多信息，请百度安卓 Intent 或参考"),a("a",J,[n("Android 指南: Intent"),e(t)]),n("。")]),M,a("p",null,[n("参见"),a("a",X,[n("intent 参数的规范"),e(t)]),n("。")]),Y,a("ul",null,[G,a("li",null,[H,n(" {Uri} 一个代表 Uri 的对象，参见"),a("a",K,[n("android.net.Uri"),e(t)]),n("。")])]),Z,$,aa,a("ul",null,[na,a("li",null,[ea,n(" {Uri} 一个指向该文件的 Uri 的对象，参见"),a("a",ta,[n("android.net.Uri"),e(t)]),n("。")])]),sa])}const ca=i(r,[["render",pa],["__file","app.html.vue"]]),ra=JSON.parse('{"path":"/app.html","title":"应用交互-app","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"app.versionCode","slug":"app-versioncode","link":"#app-versioncode","children":[]},{"level":2,"title":"app.versionName","slug":"app-versionname","link":"#app-versionname","children":[]},{"level":2,"title":"app.autojs.versionCode","slug":"app-autojs-versioncode","link":"#app-autojs-versioncode","children":[]},{"level":2,"title":"app.autojs.versionName","slug":"app-autojs-versionname","link":"#app-autojs-versionname","children":[]},{"level":2,"title":"app.launchApp(appName)","slug":"app-launchapp-appname","link":"#app-launchapp-appname","children":[]},{"level":2,"title":"app.launch(packageName)","slug":"app-launch-packagename","link":"#app-launch-packagename","children":[]},{"level":2,"title":"app.launchPackage(packageName)","slug":"app-launchpackage-packagename","link":"#app-launchpackage-packagename","children":[]},{"level":2,"title":"app.getPackageName(appName)","slug":"app-getpackagename-appname","link":"#app-getpackagename-appname","children":[]},{"level":2,"title":"app.getAppName(packageName)","slug":"app-getappname-packagename","link":"#app-getappname-packagename","children":[]},{"level":2,"title":"app.openAppSetting(packageName)","slug":"app-openappsetting-packagename","link":"#app-openappsetting-packagename","children":[]},{"level":2,"title":"app.viewFile(path)","slug":"app-viewfile-path","link":"#app-viewfile-path","children":[]},{"level":2,"title":"app.editFile(path)","slug":"app-editfile-path","link":"#app-editfile-path","children":[]},{"level":2,"title":"app.uninstall(packageName)","slug":"app-uninstall-packagename","link":"#app-uninstall-packagename","children":[]},{"level":2,"title":"app.openUrl(url)","slug":"app-openurl-url","link":"#app-openurl-url","children":[]},{"level":2,"title":"app.sendEmail(options)","slug":"app-sendemail-options","link":"#app-sendemail-options","children":[]},{"level":2,"title":"app.startActivity(name)","slug":"app-startactivity-name","link":"#app-startactivity-name","children":[]},{"level":2,"title":"进阶: 意图 Intent","slug":"进阶-意图-intent","link":"#进阶-意图-intent","children":[{"level":3,"title":"app.intent(options)","slug":"app-intent-options","link":"#app-intent-options","children":[]},{"level":3,"title":"app.startActivity(options)","slug":"app-startactivity-options","link":"#app-startactivity-options","children":[]},{"level":3,"title":"app.sendBroadcast(options)","slug":"app-sendbroadcast-options","link":"#app-sendbroadcast-options","children":[]},{"level":3,"title":"app.startService(options)","slug":"app-startservice-options","link":"#app-startservice-options","children":[]},{"level":3,"title":"app.sendBroadcast(name)","slug":"app-sendbroadcast-name","link":"#app-sendbroadcast-name","children":[]},{"level":3,"title":"app.intentToShell(options)","slug":"app-intenttoshell-options","link":"#app-intenttoshell-options","children":[]},{"level":3,"title":"app.parseUri(uri)","slug":"app-parseuri-uri","link":"#app-parseuri-uri","children":[]},{"level":3,"title":"app.getUriForFile(path)","slug":"app-geturiforfile-path","link":"#app-geturiforfile-path","children":[]}]}],"git":{"updatedTime":1715913158000,"contributors":[{"name":"Lin","email":"106499400+LYS86@users.noreply.github.com","commits":2},{"name":"Lin","email":"yditmxpev@mozmail.com","commits":2}]},"filePathRelative":"app.md"}');export{ca as comp,ra as data};
