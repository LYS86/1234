import{_ as o,r as i,o as r,c,d as t,b as l,a as e,e as n}from"./app-DB8vNATu.js";const d={},u=e("h1",{id:"ml-kit-ocr",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ml-kit-ocr"},[e("span",null,"ML kit OCR")])],-1),p=e("h2",{id:"gmlkit-ocr-img-language",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#gmlkit-ocr-img-language"},[e("span",null,"gmlkit.ocr(img, language)")])],-1),h=e("p",null,"对给定的图像进行文字识别。",-1),g=e("li",null,[e("code",null,"img"),l(" {Image} 图片")],-1),m=e("code",null,"Language",-1),k=n("<li><code>la</code> 拉丁</li><li><code>zh</code> 中文</li><li><code>sa</code> 梵文</li><li><code>ja</code> 日语</li><li><code>ko</code> 韩语</li>",5),v={href:"https://developers.google.com/ml-kit/vision/text-recognition/v2/languages?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},_=e("li",null,[e("code",null,"retrun"),l("{"),e("a",{href:"#Result"},"Result"),l("} 文字识别结果。")],-1),f=n(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 识别中文</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> gmlkit<span class="token punctuation">.</span><span class="token function">ocr</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="gmlkit-ocrtext-img-language" tabindex="-1"><a class="header-anchor" href="#gmlkit-ocrtext-img-language"><span>gmlkit.ocrText(img, language)</span></a></h2><p>对给定的图像进行文字识别，并返回识别到的文本字符串。</p>`,3),b=e("li",null,[e("code",null,"img"),l(" {Image} 图片")],-1),x=e("code",null,"Language",-1),R=n("<li><code>la</code> 拉丁</li><li><code>zh</code> 中文</li><li><code>sa</code> 梵文</li><li><code>ja</code> 日语</li><li><code>ko</code> 韩语</li>",5),y={href:"https://developers.google.com/ml-kit/vision/text-recognition/v2/languages?hl=zh-cn",target:"_blank",rel:"noopener noreferrer"},N=e("li",null,[e("code",null,"retrun"),l(" {String} 识别到的文本字符串。")],-1),j=n(`<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 识别中文</span>
<span class="token keyword">let</span> result <span class="token operator">=</span> gmlkit<span class="token punctuation">.</span><span class="token function">ocrText</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;zh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="result" tabindex="-1"><a class="header-anchor" href="#result"><span>Result</span></a></h2><p>表示 Google ML Kit 文字识别返回的结果,有以下几个属性：</p>`,3),A=e("li",null,[e("code",null,"level"),l(" {Number} 结果的层级。")],-1),z=e("li",null,[e("code",null,"confidence"),l(" {Number} 识别结果的置信度。")],-1),L=e("li",null,[e("code",null,"text"),l(" {String} 识别到的文本。")],-1),S=e("li",null,[e("code",null,"language"),l(" {String} 识别到的语言。")],-1),B=e("code",null,"bounds",-1),J={href:"https://developer.android.google.cn/reference/kotlin/android/graphics/Rect?hl=en",target:"_blank",rel:"noopener noreferrer"},T=e("li",null,[e("code",null,"children"),l(" {Array} 子列表，包含更详细的内容。")],-1),q=n('<h3 id="result-find-predicate" tabindex="-1"><a class="header-anchor" href="#result-find-predicate"><span>Result.find(predicate)</span></a></h3><p>查找符合条件的第一个元素，没找到则返回 <code>null</code>。</p><ul><li><code>predicate</code> {Function} 用于判断的函数，接受一个 <code>Result</code> 对象作为参数。</li><li><code>return</code> {Result}</li></ul><h3 id="result-find-level-predicate" tabindex="-1"><a class="header-anchor" href="#result-find-level-predicate"><span>Result.find(level,predicate)</span></a></h3><p>查找指定层级中符合条件的第一个元素，没找到则返回 <code>null</code>。</p><ul><li><code>level</code> {Number} 指定的层级。</li><li><code>predicate</code> {Function} 用于判断的函数，接受一个 <code>Result</code> 对象作为参数。</li><li><code>return</code> {Result}</li></ul><h3 id="result-filter-predicate" tabindex="-1"><a class="header-anchor" href="#result-filter-predicate"><span>Result.filter(predicate)</span></a></h3><p>查找符合条件的所有元素</p><ul><li><code>predicate</code> {Function} 用于判断的函数，接受一个 <code>Result</code> 对象作为参数。</li><li><code>return</code> {Array} Java 数组</li></ul><h3 id="result-filter-level-predicate" tabindex="-1"><a class="header-anchor" href="#result-filter-level-predicate"><span>Result.filter(level,predicate)</span></a></h3><p>在指定层级中查找符合条件的所有元素</p><ul><li><code>level</code> {Number} 指定的层级。</li><li><code>predicate</code> {Function} 用于判断的函数，接受一个 <code>Result</code> 对象作为参数。</li><li><code>return</code> {Array} Java 数组</li></ul><h3 id="result-toarray" tabindex="-1"><a class="header-anchor" href="#result-toarray"><span>Result.toArray()</span></a></h3><p>将结果转换成数组</p><ul><li><code>return</code> {Array} Java 数组</li></ul><h3 id="result-toarray-level" tabindex="-1"><a class="header-anchor" href="#result-toarray-level"><span>Result.toArray(level)</span></a></h3><p>将指定层级结果转换成数组</p><ul><li><code>level</code> {Number} 层级</li><li><code>return</code> {Array} Java 数组</li></ul><h3 id="result-sort" tabindex="-1"><a class="header-anchor" href="#result-sort"><span>Result.sort()</span></a></h3><p>根据<code>bounds</code>的位置对原结果进行排序</p><h3 id="result-sorted" tabindex="-1"><a class="header-anchor" href="#result-sorted"><span>Result.sorted()</span></a></h3><p>同上,返回排序后的 Result 对象</p><ul><li><p><code>return</code> {Result}</p></li></ul>',23);function C(F,I){const s=i("Badge"),a=i("ExternalLinkIcon");return r(),c("div",null,[u,t(s,{type:"tip",text:"6.3.4+",vertical:"middle"}),l(),t(s,{type:"warning",text:"实验",vertical:"middle"}),p,h,e("ul",null,[g,e("li",null,[m,l(" {String} 识别语言，可选值为： "),e("ul",null,[k,e("li",null,[e("a",v,[l("其他语言"),t(a)])])])]),_]),f,e("ul",null,[b,e("li",null,[x,l(" {String} 识别语言，可选值为： "),e("ul",null,[R,e("li",null,[e("a",y,[l("其他语言"),t(a)])])])]),N]),j,e("ul",null,[A,z,L,S,e("li",null,[B,l(" {"),e("a",J,[l("Rect"),t(a)]),l("} 文本在图片中的位置")]),T]),q])}const w=o(d,[["render",C],["__file","gmlkit.html.vue"]]),E=JSON.parse('{"path":"/gmlkit.html","title":"ML kit OCR","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"gmlkit.ocr(img, language)","slug":"gmlkit-ocr-img-language","link":"#gmlkit-ocr-img-language","children":[]},{"level":2,"title":"gmlkit.ocrText(img, language)","slug":"gmlkit-ocrtext-img-language","link":"#gmlkit-ocrtext-img-language","children":[]},{"level":2,"title":"Result","slug":"result","link":"#result","children":[{"level":3,"title":"Result.find(predicate)","slug":"result-find-predicate","link":"#result-find-predicate","children":[]},{"level":3,"title":"Result.find(level,predicate)","slug":"result-find-level-predicate","link":"#result-find-level-predicate","children":[]},{"level":3,"title":"Result.filter(predicate)","slug":"result-filter-predicate","link":"#result-filter-predicate","children":[]},{"level":3,"title":"Result.filter(level,predicate)","slug":"result-filter-level-predicate","link":"#result-filter-level-predicate","children":[]},{"level":3,"title":"Result.toArray()","slug":"result-toarray","link":"#result-toarray","children":[]},{"level":3,"title":"Result.toArray(level)","slug":"result-toarray-level","link":"#result-toarray-level","children":[]},{"level":3,"title":"Result.sort()","slug":"result-sort","link":"#result-sort","children":[]},{"level":3,"title":"Result.sorted()","slug":"result-sorted","link":"#result-sorted","children":[]}]}],"git":{"updatedTime":1713029763000,"contributors":[{"name":"Lin","email":"yditmxpev@mozmail.com","commits":1}]},"filePathRelative":"gmlkit.md"}');export{w as comp,E as data};
