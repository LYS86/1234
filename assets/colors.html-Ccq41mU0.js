import{_ as n,r,o as t,c as i,d as e,a as o,b as l,e as s}from"./app-BySNIpVP.js";const d={},h=o("h1",{id:"颜色-colors",tabindex:"-1"},[o("a",{class:"header-anchor",href:"#颜色-colors"},[o("span",null,"颜色-colors")])],-1),p=s('<p>在 Auto.js 有两种方式表示一个颜色。 一种是使用一个字符串&quot;#AARRGGBB&quot;或&quot;#RRGGBB&quot;，其中 AA 是 Alpha 通道(透明度)的值，RR 是 R 通道(红色)的值，GG 是 G 通道(绿色)的值，BB 是 B 通道(蓝色)的值。例如&quot;#ffffff&quot;表示白色, &quot;#7F000000&quot;表示半透明的黑色。 另一种是使用一个 16 进制的&quot;32 位整数&quot; 0xAARRGGBB 来表示一个颜色，例如 <code>0xFF112233</code>表示颜色&quot;#112233&quot;, <code>0x11223344</code>表示颜色&quot;#11223344&quot;。 可以通过<code>colors.toString()</code>把颜色整数转换为字符串，通过<code>colors.parseColor()</code>把颜色字符串解析为颜色整数。</p><h2 id="colors-tostring-color" tabindex="-1"><a class="header-anchor" href="#colors-tostring-color"><span>colors.toString(color)</span></a></h2><ul><li><code>color</code> {number} 整数 RGB 颜色值</li><li>返回 {string}</li></ul><p>返回颜色值的字符串，格式为 &quot;#AARRGGBB&quot;。</p><h2 id="colors-red-color" tabindex="-1"><a class="header-anchor" href="#colors-red-color"><span>colors.red(color)</span></a></h2><ul><li><code>color</code> {number} | {string} 颜色值</li><li>返回 {number}</li></ul><p>返回颜色 color 的 R 通道的值，范围 0~255.</p><h2 id="colors-green-color" tabindex="-1"><a class="header-anchor" href="#colors-green-color"><span>colors.green(color)</span></a></h2><ul><li><code>color</code> {number} | {string} 颜色值</li><li>返回 {number}</li></ul><p>返回颜色 color 的 G 通道的值，范围 0~255.</p><h2 id="colors-blue-color" tabindex="-1"><a class="header-anchor" href="#colors-blue-color"><span>colors.blue(color)</span></a></h2><ul><li><code>color</code> {number} | {string} 颜色值</li><li>返回 {number}</li></ul><p>返回颜色 color 的 B 通道的值，范围 0~255.</p><h2 id="colors-alpha-color" tabindex="-1"><a class="header-anchor" href="#colors-alpha-color"><span>colors.alpha(color)</span></a></h2><ul><li><code>color</code> {number} | {string} 颜色值</li><li>返回 {number}</li></ul><p>返回颜色 color 的 Alpha 通道的值，范围 0~255.</p><h2 id="colors-rgb-red-green-blue" tabindex="-1"><a class="header-anchor" href="#colors-rgb-red-green-blue"><span>colors.rgb(red, green, blue)</span></a></h2><ul><li><code>red</code> {number} 颜色的 R 通道的值</li><li><code>blue</code> {number} 颜色的 G 通道的值</li><li><code>green</code> {number} 颜色的 B 通道的值</li><li>返回 {number}</li></ul><p>返回这些颜色通道构成的整数颜色值。Alpha 通道将是 255（不透明）。</p><h2 id="colors-argb-alpha-red-green-blue" tabindex="-1"><a class="header-anchor" href="#colors-argb-alpha-red-green-blue"><span>colors.argb(alpha, red, green, blue)</span></a></h2><ul><li><code>alpha</code> {number} 颜色的 Alpha 通道的值</li><li><code>red</code> {number} 颜色的 R 通道的值</li><li><code>green</code> {number} 颜色的 G 通道的值</li><li><code>blue</code> {number} 颜色的 B 通道的值</li><li>返回 {number}</li></ul><p>返回这些颜色通道构成的整数颜色值。</p><h2 id="colors-parsecolor-colorstr" tabindex="-1"><a class="header-anchor" href="#colors-parsecolor-colorstr"><span>colors.parseColor(colorStr)</span></a></h2><ul><li><code>colorStr</code> {string} 表示颜色的字符串，例如&quot;#112233&quot;</li><li>返回 {number}</li></ul><p>返回颜色的整数值。</p><h2 id="colors-issimilar-color2-color2-threshold-algorithm" tabindex="-1"><a class="header-anchor" href="#colors-issimilar-color2-color2-threshold-algorithm"><span>colors.isSimilar(color2, color2[, threshold, algorithm])</span></a></h2>',26),u=o("li",null,[o("code",null,"color1"),l(" {number} | {string} 颜色值 1")],-1),g=o("li",null,[o("code",null,"color1"),l(" {number} | {string} 颜色值 2")],-1),b=o("li",null,[o("code",null,"threshold"),l(" {number} 颜色相似度临界值，默认为 4。取值范围为 0~255。这个值越大表示允许的相似程度越小，如果这个值为 0，则两个颜色相等时该函数才会返回 true。")],-1),m=o("code",null,"algorithm",-1),k=o("li",null,[o("code",null,"diff"),l(": 差值匹配。与给定颜色的 R、G、B 差的绝对值之和小于 threshold 时匹配。")],-1),f=o("li",null,[o("code",null,"rgb"),l(": rgb 欧拉距离相似度。与给定颜色 color 的 rgb 欧拉距离小于等于 threshold 时匹配。")],-1),F=o("code",null,"rgb+",-1),_={href:"https://en.wikipedia.org/wiki/Color_difference",target:"_blank",rel:"noopener noreferrer"},v=o("li",null,[o("code",null,"hs"),l(": hs 欧拉距离匹配。hs 为 HSV 空间的色调值。")],-1),x=o("li",null,"返回 {Boolean}",-1),A=s(`<p>返回两个颜色是否相似。</p><h2 id="colors-equals-color1-color2" tabindex="-1"><a class="header-anchor" href="#colors-equals-color1-color2"><span>colors.equals(color1, color2)</span></a></h2><ul><li><code>color1</code> {number} | {string} 颜色值 1</li><li><code>color1</code> {number} | {string} 颜色值 2</li><li>返回 {Boolean}</li></ul><p>返回两个颜色是否相等。<strong>注意该函数会忽略 Alpha 通道的值进行比较</strong>。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token function">log</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;#112233&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;#112234&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">log</span><span class="token punctuation">(</span>colors<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token number">0xff112233</span><span class="token punctuation">,</span> <span class="token number">0xff223344</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="colors-black" tabindex="-1"><a class="header-anchor" href="#colors-black"><span>colors.BLACK</span></a></h2><p>黑色，颜色值 #FF000000</p><h2 id="colors-dkgray" tabindex="-1"><a class="header-anchor" href="#colors-dkgray"><span>colors.DKGRAY</span></a></h2><p>深灰色，颜色值 #FF444444</p><h2 id="colors-gray" tabindex="-1"><a class="header-anchor" href="#colors-gray"><span>colors.GRAY</span></a></h2><p>灰色，颜色值 #FF888888</p><h2 id="colors-ltgray" tabindex="-1"><a class="header-anchor" href="#colors-ltgray"><span>colors.LTGRAY</span></a></h2><p>亮灰色，颜色值 #FFCCCCCC</p><h2 id="colors-white" tabindex="-1"><a class="header-anchor" href="#colors-white"><span>colors.WHITE</span></a></h2><p>白色，颜色值 #FFFFFFFF</p><h2 id="colors-red" tabindex="-1"><a class="header-anchor" href="#colors-red"><span>colors.RED</span></a></h2><p>红色，颜色值 #FFFF0000</p><h2 id="colors-green" tabindex="-1"><a class="header-anchor" href="#colors-green"><span>colors.GREEN</span></a></h2><p>绿色，颜色值 #FF00FF00</p><h2 id="colors-blue" tabindex="-1"><a class="header-anchor" href="#colors-blue"><span>colors.BLUE</span></a></h2><p>蓝色，颜色值 #FF0000FF</p><h2 id="colors-yellow" tabindex="-1"><a class="header-anchor" href="#colors-yellow"><span>colors.YELLOW</span></a></h2><p>黄色，颜色值 #FFFFFF00</p><h2 id="colors-cyan" tabindex="-1"><a class="header-anchor" href="#colors-cyan"><span>colors.CYAN</span></a></h2><p>青色，颜色值 #FF00FFFF</p><h2 id="colors-magenta" tabindex="-1"><a class="header-anchor" href="#colors-magenta"><span>colors.MAGENTA</span></a></h2><p>品红色，颜色值 #FFFF00FF</p><h2 id="colors-transparent" tabindex="-1"><a class="header-anchor" href="#colors-transparent"><span>colors.TRANSPARENT</span></a></h2><p>透明，颜色值 #00000000</p>`,29);function R(q,B){const c=r("Badge"),a=r("ExternalLinkIcon");return t(),i("div",null,[h,e(c,{type:"tip",text:"稳定",vertical:"middle"}),p,o("ul",null,[u,g,b,o("li",null,[m,l(' {string} 颜色匹配算法，默认为"diff", 包括: '),o("ul",null,[k,f,o("li",null,[F,l(": 加权 rgb 欧拉距离匹配("),o("a",_,[l("LAB Delta E"),e(a)]),l(")。")]),v])]),x]),A])}const y=n(d,[["render",R],["__file","colors.html.vue"]]),E=JSON.parse('{"path":"/colors.html","title":"颜色-colors","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"colors.toString(color)","slug":"colors-tostring-color","link":"#colors-tostring-color","children":[]},{"level":2,"title":"colors.red(color)","slug":"colors-red-color","link":"#colors-red-color","children":[]},{"level":2,"title":"colors.green(color)","slug":"colors-green-color","link":"#colors-green-color","children":[]},{"level":2,"title":"colors.blue(color)","slug":"colors-blue-color","link":"#colors-blue-color","children":[]},{"level":2,"title":"colors.alpha(color)","slug":"colors-alpha-color","link":"#colors-alpha-color","children":[]},{"level":2,"title":"colors.rgb(red, green, blue)","slug":"colors-rgb-red-green-blue","link":"#colors-rgb-red-green-blue","children":[]},{"level":2,"title":"colors.argb(alpha, red, green, blue)","slug":"colors-argb-alpha-red-green-blue","link":"#colors-argb-alpha-red-green-blue","children":[]},{"level":2,"title":"colors.parseColor(colorStr)","slug":"colors-parsecolor-colorstr","link":"#colors-parsecolor-colorstr","children":[]},{"level":2,"title":"colors.isSimilar(color2, color2[, threshold, algorithm])","slug":"colors-issimilar-color2-color2-threshold-algorithm","link":"#colors-issimilar-color2-color2-threshold-algorithm","children":[]},{"level":2,"title":"colors.equals(color1, color2)","slug":"colors-equals-color1-color2","link":"#colors-equals-color1-color2","children":[]},{"level":2,"title":"colors.BLACK","slug":"colors-black","link":"#colors-black","children":[]},{"level":2,"title":"colors.DKGRAY","slug":"colors-dkgray","link":"#colors-dkgray","children":[]},{"level":2,"title":"colors.GRAY","slug":"colors-gray","link":"#colors-gray","children":[]},{"level":2,"title":"colors.LTGRAY","slug":"colors-ltgray","link":"#colors-ltgray","children":[]},{"level":2,"title":"colors.WHITE","slug":"colors-white","link":"#colors-white","children":[]},{"level":2,"title":"colors.RED","slug":"colors-red","link":"#colors-red","children":[]},{"level":2,"title":"colors.GREEN","slug":"colors-green","link":"#colors-green","children":[]},{"level":2,"title":"colors.BLUE","slug":"colors-blue","link":"#colors-blue","children":[]},{"level":2,"title":"colors.YELLOW","slug":"colors-yellow","link":"#colors-yellow","children":[]},{"level":2,"title":"colors.CYAN","slug":"colors-cyan","link":"#colors-cyan","children":[]},{"level":2,"title":"colors.MAGENTA","slug":"colors-magenta","link":"#colors-magenta","children":[]},{"level":2,"title":"colors.TRANSPARENT","slug":"colors-transparent","link":"#colors-transparent","children":[]}],"git":{"updatedTime":1713029763000,"contributors":[{"name":"Lin","email":"yditmxpev@mozmail.com","commits":1}]},"filePathRelative":"colors.md"}');export{y as comp,E as data};
